---
import { type ImageMetadata } from 'astro';
import { Image, type LocalImageProps, type RemoteImageProps } from 'astro:assets';
import clsx from 'clsx';

interface Props {
	class?: string;
	alt: string;
	img: ImageMetadata;
	text_side: 'left' | 'right';
	text: string;
}


const {class: styles, text_side,text,alt,img} = Astro.props

const st = {
	_: clsx(`md:px-[3vw] lg:px-[6vw] xl:px-[12vw]`, styles),
	container_text: clsx(`w-full xs:w-[63%]`, {
		'xs:ml-auto': text_side == 'right'
	}),
	container_image: clsx(`max-xs:mx-auto max-xs:mt-10 max-w-[70%] xs:-mt-60 xs:max-w-[min(45%,32rem)] xl:-mt-60`, {
		'xs:ml-auto sm:mr-8 sm:rotate-[-4deg]': text_side == 'left',
		'sm:ml-8 sm:rotate-[4deg]': text_side == 'right'
	}),
	text: clsx(`z-10 max-xs:text-center font-heading2 text-fluid-xl min-[450px]:text-[calc(theme(fontSize.fluid-base)+.5rem)] text-secondary-darker mt-8 font-[100] text-shadow-lg drop-shadow-lg shadow-black leading-[1.3] sm:leading-[1.5] font-[450] sm:font-[550] md:tracking-[0.2rem] tracking-[.07rem] xs:tracking-[.1rem]`, {
		'text-right': text_side == 'left',
		'text-left': text_side == 'right'
	}),
	image: `w-full h-auto rounded-lg`
}
---

<div class={st._}>
	<div class={st.container_text}>
		<p class={st.text}>
			{text}
		</p>
	</div>
	<div class={st.container_image}>
		<Image class={st.image} alt={alt} src={img} />
	</div>
</div>